<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace = "coopevaluation">

<select id="dbcheck" parameterType="cusers" resultType="int">
	select count(*) from coopusers where id = #{id}
</select>

<select id="login" parameterType="cusers" resultType="int">
		select count(*) from
		coopusers
		where id = #{id} and 
		<choose>
			<when test="name == null">
			pwd = #{pwd}
			</when>
			<when test="pwd == null">
			name = #{name}
			</when>
			
		</choose>
		
	</select>
	<select id="info" resultType="cusers" parameterType="int">
		select idx, c_name, c_name2, c_subname, c_subcode, id, pwd, c_position, name, reg_date, end_date, phone, del_yn, c_M, grade, user_code
		from coopusers where idx=#{idx}
	</select>
	<select id="info2" resultType="cusers" parameterType="cusers">
		select idx, c_name, c_name2, c_subname, c_subcode, id, pwd, c_position, name, reg_date, end_date, phone, del_yn, c_M, grade, user_code
		from coopusers where id=#{id}
	</select>
	<update id="pwdinsert" parameterType="cusers">
		update coopusers set pwd = #{pwd} where idx = #{idx}
	</update>
	<update id="pwdajax" parameterType="map">
		update coopusers set pwd = #{pwd} where id = #{id}
	</update>
	
	
	<select id="evList" resultType="evaluation" parameterType="evaluation">
		select * from evaluation where d2 = #{d2}
	</select>
	
	<insert id="forminsert" parameterType="answer">
		insert into answer (u1, u2, t1, team, d1, ev)
		values (
		#{u1}, #{u2}, #{t1}, #{team}, #{d1}, #{ev})
	</insert>
	<!-- 평가 완료 중복 체크 -->
	<select id="formcheck" resultType="int" parameterType="map">
		select count(*) from whether where d1 = #{d1} and d2 = #{d2} and team = #{team} 
	</select>
	
	
	<!--  평가 완료 표시  -->
	<insert id="whether" parameterType="whether">
		insert into whether (d1, d2, d3, ev, team)
		values (#{d1}, #{d2}, "평가완료", #{ev}, #{team})
	</insert>
	<!-- 리스트에서 평가 완료 확인 -->
	<select id="whetherselect" resultType="map" parameterType="map">
		select * from whether where d1 = #{idx}
		<!-- 
		select * from whether where d1 = #{id}
		
		 -->
	</select>
	<select id="noticeselect" resultType="map" parameterType="map">
		select * from notice where d1 = 2
	</select>
	<!-- 로그인 기록 저장 -->
	<insert id="loginlog" parameterType="loginlog">
		insert into loginlog (id, d1, ip) values (#{id}, #{name}, #{ip})
	</insert>
	 <select id="users" resultType="map" parameterType="map">
		select u.idx, u.c_name, u.c_name2, u.c_subname, u.c_subcode, u.id, u.pwd, u.c_position, u.name, u.reg_date, u.end_date, u.phone, u.del_yn, u.c_M, 
		u.grade, u.user_code
		from coopusers u
	</select>
	 
	<select id="users1" resultType="map" parameterType="map">
		select idx, c_name, c_name2, c_subname, c_subcode, id, pwd, c_position, name, reg_date, end_date, phone, del_yn, c_M, grade, user_code
		from coopusers where hspt_name = "효사랑전주요양병원"
	</select>
	<select id="users1pwd" resultType="map" parameterType="map">
		select idx, c_name, c_name2, c_subname, c_subcode, id, pwd, c_position, name, reg_date, end_date, phone, del_yn, c_M, grade, user_code
		from coopusers where hspt_name = "효사랑전주요양병원" order by pwd asc
	</select>
	
	<select id="users2" resultType="map" parameterType="map">
		select idx, c_name, c_name2, c_subname, c_subcode, id, pwd, c_position, name, reg_date, end_date, phone, del_yn, c_M, grade, user_code
		from coopusers where hspt_name = "효사랑가족요양병원"
	</select>
	<select id="users2pwd" resultType="map" parameterType="map">
		select idx, c_name, c_name2, c_subname, c_subcode, id, pwd, c_position, name, reg_date, end_date, phone, del_yn, c_M, grade, user_code
		from coopusers where hspt_name = "효사랑가족요양병원" order by pwd asc
	</select>
	
	<select id="users3" resultType="map" parameterType="map">
		select idx, c_name, c_name2, c_subname, c_subcode, id, pwd, c_position, name, reg_date, end_date, phone, del_yn, c_M, grade, user_code
		from coopusers where hspt_name = "가족사랑요양병원"
	</select>
	<select id="users3pwd" resultType="map" parameterType="map">
		select idx, c_name, c_name2, c_subname, c_subcode, id, pwd, c_position, name, reg_date, end_date, phone, del_yn, c_M, grade, user_code
		from coopusers where hspt_name = "가족사랑요양병원" order by pwd asc
	</select>
	
	<select id="log" resultType="map" parameterType="map">
		select * from loginlog where id = #{id} order by d2 desc;
	</select>
	<select id="ph" resultType="map" parameterType="map">
		select * from user__phone
	</select>
	<select id="phOne" resultType="int" parameterType="map">
		select count(*) from user__phone where id = #{id} and number = #{ph}
	</select>
	<!-- 비밀번호 초기화 -->
	<!-- 
	<update id="pwdreset" parameterType="map">
		update coopusers set pwd = null where id = #{id}
	</update>
	<update id="pwdreset1" parameterType="map">
		update coopusers set pwd = null where hspt_name = '효사랑전주요양병원' and id = #{id}
	</update>
	<update id="pwdreset2" parameterType="map">
		update coopusers set pwd = null where hspt_name = '효사랑가족요양병원' and id = #{id}
	</update>
	<update id="pwdreset3" parameterType="map">
		update coopusers set pwd = null where hspt_name = '가족사랑요양병원' and id = #{id}
	</update>
	 -->
	<!-- 비밀번호 설정한 직원 명부 -->
	<!-- 
	<select id="hsptselect1" parameterType="map" resultType="int">
		select count(*) from coopusers where hspt_name = '효사랑전주요양병원'
	</select>
	
	<select id="hsptselect2" parameterType="map" resultType="int">
		select count(*) from coopusers where hspt_name = '효사랑가족요양병원'
	</select>
	
	<select id="hsptselect3" parameterType="map" resultType="int">
		select count(*) from coopusers where hspt_name = '가족사랑요양병원'
	</select>
	
	<select id="hsptpwdselect1" parameterType="map" resultType="int">
		select count(*) from coopusers where hspt_name = '효사랑전주요양병원' and pwd is NOT NULL;
	</select>
	<select id="hsptpwdselect2" parameterType="map" resultType="int">
		select count(*) from coopusers where hspt_name = '효사랑가족요양병원' and pwd is NOT NULL;
	</select>
	<select id="hsptpwdselect3" parameterType="map" resultType="int">
		select count(*) from coopusers where hspt_name = '가족사랑요양병원' and pwd is NOT NULL;
	</select>
	 -->
	<!-- 부서별 비밀번호 설정한 인원? -->
	<!-- 
	<select id="hsptselect1sub" parameterType="map" resultType="int">
		select count(*) from coopusers where hspt_name = '효사랑전주요양병원' and pwd is NOT NULL and user_code like concat (#{sub}, '%');
	</select>
	<select id="hsptselect2sub" parameterType="map" resultType="int">
		select count(*) from coopusers where hspt_name = '효사랑가족요양병원' and pwd is NOT NULL and user_code like concat (#{sub}, '%');
	</select>
	<select id="hsptselect3sub" parameterType="map" resultType="int">
		select count(*) from coopusers where hspt_name = '가족사랑요양병원' and pwd is NOT NULL and user_code like concat (#{sub}, '%');
	</select>
	
	<select id="target" parameterType="map" resultType="map">
		select * from target
	</select>
	
	<select id="answerselect" parameterType="map" resultType="map">
		select idx, u1, u2, t1, team, d1, DATE_FORMAT(regdate, '%Y-%m-%d %H:%i:%s') from answer
	</select>
	 -->
	 
	 <!-- 평가 대상자 쿼리 -->
	 
	 <select id="coopevaluationtarget" resultType="cusers">
	 	select u.idx, u.c_name, u.c_name2, u.c_subname, u.c_subcode, u.id, u.pwd, u.c_position, u.name, u.reg_date, u.end_date, u.phone, u.del_yn, u.c_M, 
			u.grade, u.user_code
			FROM coopusers u
			where u.del_yn = 'N' and 
	    
	    <choose>
	    	<!-- 등급이 1인 직원 (대표이사) -->
	    	<when test="grade == 1">
	    	u.c_name = '정성모아' and u.c_subcode = 'AC0'
	    	or
			del_yn = 'N' and c_name = '정성모아' and c_name2 = '효사랑가족요양병원';
	    	</when>
	    	<!-- 등급이 2인 직원 (부장급) -->
	    	<when test="grade == 2">
	    		<choose>
	    			<!-- 1병원 -->
	    			<when test='cname2.equals("효사랑전주요양병원")'>
	    			u.c_name = '정성모아' and u.c_name2 = '효사랑전주요양병원' and u.grade = 6
					or
					u.del_yn = 'N' and u.c_name = '사랑모아' and u.c_name2 = '효사랑전주요양병원' and u.grade = 6
						    			
	    			</when>
	    			<!-- 2병원 -->
	    			<when test='cname2.equals("효사랑가족요양병원")'>
	    			<![CDATA[
	    			u.c_name = '정성모아' and u.c_name2 = '효사랑가족요양병원' and u.grade = 6 and u.c_subname != '정성모아'
	    			
	    			]]>
	    			</when>
	    			<!-- 3병원 -->
	    			<when test='cname2.equals("가족사랑요양병원")'>
	    			u.c_name = '정성모아' and u.c_name2 = '가족사랑요양병원' and u.grade = 6
	    			or
	    			u.del_yn = 'N' and u.c_name = '사랑모아' and u.c_name2 = '가족사랑요양병원' and u.grade = 6
	    			</when>
	    		</choose>
	    	</when>
	    	<!-- 등급이 3인 직원 (부서장, 상호) -->
	    	<when test="grade == 3">
	    		<choose>
	    			<!-- 변수) 등급 3인 직원 중 상호, 상하 평가 하는 직원 -->
	    			<!--  -->
	    			<when test='csubcode.equals("C00")'>
	    				u.c_name2 = #{cname2} and u.c_subcode like 'C0%'
	    			</when>
	    			<!--  -->
	    			<when test='csubcode.equals("AD0")'>
	    				u.c_subcode like 'AD0'
	    			</when>
	    			<!-- 변수) 운영진 -->
	    			<when test='csubcode.equals("AG0")'>
	    				u.c_name = #{cname1} and u.grade = 5 and u.c_subcode = #{csubcode}
	    				or
	    				u.c_name = #{cname1} and u.c_M = 'T'
	    			</when>
	    			<when test='csubcode.equals("AH0")'>
	    				u.c_name = #{cname1} and u.grade = 5 and u.c_subcode = #{csubcode}
	    				or
	    				u.c_name = #{cname1} and u.c_M = 'T'
	    			</when>
	    			<when test='csubcode.equals("AI0")'>
	    				<![CDATA[
		    				u.c_subcode = #{csubcode} and u.grade = 5
	    			
	    				]]>
	    				
	    			</when>
	    			<otherwise>
	    				u.c_name = #{cname1} and u.grade = 5
	    			</otherwise>
	    		</choose>
	    		
	    	</when>
	    	<!-- 등급이 4인 직원 (부서장, 상하) -->
	    	<when test="grade == 4">
	    		<choose>
	    			<when test='csubcode.equals("AI0")'>
	    				u.c_subcode = #{csubcode}
	    			</when>
	    			<otherwise>
						u.c_name2 = #{cname2} and u.c_subcode = #{csubcode} and u.grade = 6
	    			</otherwise>
	    		</choose>
	    	</when>
	    	<!-- 등급이 5인 직원 (부서원, 상호) -->
	    	<when test="grade == 5">
	    		<choose>
	    			<!-- 변수) 운영진간 평가 -->
	    			<when test='management == true'>
	    			u.c_name = #{cname1} and c_M = 'T'
	    			</when>
	    			<when test='csubcode.equals("AD0")'>
	    			u.c_subcode = #{csubcode} and u.grade = 5
		    		or
		    		u.del_yn = 'N' and u.c_subcode = #{csubcode} and u.grade = 3
	    			</when>
	    			<otherwise>
	    			u.c_name2 = #{cname2} and u.c_subcode = #{csubcode} and u.grade = 5
		    		or
		    		u.del_yn = 'N' and u.c_name2 = #{cname2} and u.c_subcode = #{csubcode} and u.grade = 3
	    			</otherwise>
	    		</choose>
	    	</when>
	    	<otherwise>
	    		idx = #{idx}
	    	</otherwise>
	    </choose>
	    	
	 </select>
	
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
</mapper>